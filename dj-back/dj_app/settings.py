"""
Django settings for dj_app project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
# from decouple import config
from dotenv import load_dotenv
import os

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ENABLE_HTTPS = os.getenv('ENABLE_DJANGO_HTTPS', default="true").lower() == 'true'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

if ENABLE_HTTPS:
    SECURE_SSL_REDIRECT = True  # Redirect all HTTP to HTTPS
    SECURE_HSTS_SECONDS = 3600  # Optional: HTTP Strict Transport Security (HSTS)
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
else:
    SECURE_SSL_REDIRECT = False
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h8)8l3fgri$^6ka@b36_d$fmr$_xn_(m577equ-r!p%b2+)t&5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ENABLE_GRAPHQL = os.getenv('ENABLE_GRAPHQL', default="false").lower() == 'true'
GRAPHQL_GATEWAY_URL = os.getenv('APOLLO_URL', default="http://127.0.0.1:4000/")
FRONTEND_URL = os.getenv('ANGULAR_URL', default="http://localhost:3000/")

ALLOWED_HOSTS = [
    # GRAPHQL_GATEWAY_URL if ENABLE_GRAPHQL else FRONTEND_URL,
    '*' ,
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphene_django',
    'corsheaders',
    'django_extensions',
    'rest_framework',
    # 'mysqlclient',
    'dj_web_app'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware'
]

ROOT_URLCONF = 'dj_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dj_app.wsgi.application'

USE_MYSQL = os.getenv("DJANGO_USE_MYSQL", default="false").lower() == "true"
# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.mysql',
		'NAME': os.getenv('MYSQL_DB', default='irctc'),
        'USER': os.getenv('MYSQL_USER', default='root'),
		'PASSWORD': os.getenv('MYSQL_PASS', default='root'),
        'HOST': os.getenv('MYSQL_HOST', default='localhost'),
        'PORT': os.getenv('MYSQL_PORT', default='3306'),
	} if USE_MYSQL else  {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    } 
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
     'DEFAULT_THROTTLE_RATES': {
        'user': '500/day',
    }
}

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GRAPHENE = {
    'SCHEMA': 'dj_web_app.schemas.schema.schema'  # Where your Graphene schema is located
}
